/** @format */

@import './theme/index.scss';

*,
*::before,
*::after {
    color: $light;
    box-sizing: border-box;
    scroll-behavior: smooth;
    font-family: 'Montserrat', sans-serif;
}

a,
a:visited,
a:active {
    color: inherit;
    text-decoration: none;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p {
    margin: 0;
}

img {
    width: 100%;
}

h1 {
    font-size: 4rem;
    @media only screen and (max-width: 1200px) {
        font-size: 3.5rem;
    }
    @media only screen and (max-width: 768px) {
        font-size: 2rem;
    }
}

h2 {
    font-size: 2.5rem;
    @media only screen and (max-width: 768px) {
        font-size: 1.7rem;
    }
}

h3 {
    font-size: 2.3rem;
    @media only screen and (max-width: 768px) {
        font-size: 1.5rem;
    }
}

h4 {
    font-size: 2rem;
    @media only screen and (max-width: 768px) {
        font-size: 1.5rem;
    }
}

h5 {
    font-size: 1.5rem;
    @media only screen and (max-width: 768px) {
        font-size: 1.2rem;
    }
}

h6 {
    font-size: 1.2rem;
    @media only screen and (max-width: 768px) {
        font-size: 1rem;
    }
}

p,
a,
td,
li,
label,
input,
button {
    font-size: 1rem;
}

button {
    cursor: pointer;
    outline: none;
    border: none;
}

body {
    width: 100%;
    overflow-x: hidden;
    background-color: $dark;

    .app {
        height: 100vh;
        

        main {
            padding: calc(52px + 16px) 0 16px 0;
            overflow-y: auto;
        }

        footer {
            width: 100%;
            position: fixed;
            bottom: 16px;
        }
    }
}

.container {
    padding-right: calc((100% - 1100px) / 2);
    padding-left: calc((100% - 1100px) / 2);

    @media only screen and (max-width: 1200px) {
        padding-right: calc(5% / 2);
        padding-left: calc(5% / 2);
    }
}

.hoverable {
    position: relative;
    border: $borderWidth solid $primary;

    &:hover,
    &:focus-within:has(input:not(:read-only)) {
        .verticalPseudoElement {
            height: calc(100% + 16px);
            top: -8px;

            &::before,
            &::after {
                width: 50%;
            }
        }

        .horizontalPseudoElement {
            width: calc(100% + 16px);
            left: -8px;

            &::before,
            &::after {
                height: 50%;
            }
        }
    }

    input,
    button {
        position: relative;
        z-index: 1;
    }

    .verticalPseudoElement,
    .horizontalPseudoElement {
        position: absolute;
        transition: $shortTransition;

        &::before,
        &::after {
            content: '';
            position: absolute;
            transition: $longTransition $shortTransition;
        }
    }

    .verticalPseudoElement,
    .horizontalPseudoElement::before,
    .horizontalPseudoElement::after {
        border-right: $borderWidth solid $primary;
        border-left: $borderWidth solid $primary;
    }

    .horizontalPseudoElement,
    .verticalPseudoElement::before,
    .verticalPseudoElement::after {
        border-top: $borderWidth solid $primary;
        border-bottom: $borderWidth solid $primary;
    }

    .verticalPseudoElement {
        width: calc(100% + 4px);
        left: -$borderWidth;

        &,
        &::before,
        &::after {
            height: 100%;
            top: 0;
        }

        &::before,
        &::after {
            width: 0;
        }

        &::before {
            left: 0;
        }

        &::after {
            right: 0;
        }
    }

    .horizontalPseudoElement {
        height: calc(100% + 4px);
        top: -$borderWidth;

        &,
        &::before,
        &::after {
            width: 100%;
            left: 0;
        }

        &::before,
        &::after {
            height: 0;
        }

        &::before {
            top: 0;
        }

        &::after {
            bottom: 0;
        }
    }
}

.text-primary {
    color: $primary;
}
